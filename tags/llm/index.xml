<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>llm on Blog</title><link>https://blog.zhade.dev/tags/llm/</link><description>Recent content in llm on Blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 29 Apr 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://blog.zhade.dev/tags/llm/index.xml" rel="self" type="application/rss+xml"/><item><title>Secure Generative UIs with Grammar Constrained Decoding</title><link>https://blog.zhade.dev/posts/2025-04-29-secure-generative-uis/</link><pubDate>Tue, 29 Apr 2025 00:00:00 +0000</pubDate><guid>https://blog.zhade.dev/posts/2025-04-29-secure-generative-uis/</guid><description>LLMs are very powerful for generating arbitrary text, but they really shine when you ask them to generate structured output. One such use case is generating rich UIs and text.
It’s much easier to read the output of an LLM if it’s properly styled and interactive. Reading large blobs of text can get unwieldy, and adding styling and interactive elements dynamically makes the output much more user-friendly and personalizable. This is known as a Generative UI; a User Interface that is generated in real-time by a generative AI.</description></item></channel></rss>