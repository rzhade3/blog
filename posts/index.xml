<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on Blog</title><link>https://blog.zhade.dev/posts/</link><description>Recent content in Posts on Blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 03 Apr 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://blog.zhade.dev/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>Introduction to Adversarial AI</title><link>https://blog.zhade.dev/posts/2023-04-03-intro-adversarial-ai/</link><pubDate>Mon, 03 Apr 2023 00:00:00 +0000</pubDate><guid>https://blog.zhade.dev/posts/2023-04-03-intro-adversarial-ai/</guid><description>Check out the following slideshow for an introduction into adversarial AI and vulnerabilities in machine learning systems.</description></item><item><title>Setting Secure Hashing Parameters for Password Hashing</title><link>https://blog.zhade.dev/posts/2022-05-28-setting-secure-hashing-params/</link><pubDate>Sat, 28 May 2022 00:00:00 +0000</pubDate><guid>https://blog.zhade.dev/posts/2022-05-28-setting-secure-hashing-params/</guid><description>TLDR: As of May 2022, I’d recommend using Argon2Id with the parameters recommended in RFC 9106
When trying to select the right way to protect your user’s passwords and credentials, there’s two things we need to consider. Firstly, we need to choose the right algorithm, one that is cryptographically secure. Secondly, we need to se the right parameters for the given algorithm to make it behave as securely as possible.</description></item></channel></rss>